/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

import { Route as rootRouteImport } from './../../routes/__root'
import { Route as AuthenticatedRouteRouteImport } from './../../routes/_authenticated/route'
import { Route as AuthenticatedIndexRouteImport } from './../../routes/_authenticated/index'
import { Route as authSignInRouteImport } from './../../routes/(auth)/sign-in'
import { Route as authOtpRouteImport } from './../../routes/(auth)/otp'
import { Route as auth500RouteImport } from './../../routes/(auth)/500'

const paymentSuccessLazyRouteImport = createFileRoute('/(payment)/success')()
const paymentCancelLazyRouteImport = createFileRoute('/(payment)/cancel')()
const errors598LazyRouteImport = createFileRoute('/(errors)/598')()
const errors503LazyRouteImport = createFileRoute('/(errors)/503')()
const errors500ErrorLazyRouteImport = createFileRoute('/(errors)/500-error')()
const errors404LazyRouteImport = createFileRoute('/(errors)/404')()
const errors403LazyRouteImport = createFileRoute('/(errors)/403')()
const errors401LazyRouteImport = createFileRoute('/(errors)/401')()
const authSignUpLazyRouteImport = createFileRoute('/(auth)/sign-up')()
const authSignIn2LazyRouteImport = createFileRoute('/(auth)/sign-in-2')()
const authLogoutSuccessLazyRouteImport = createFileRoute(
  '/(auth)/logout-success',
)()
const authForgotPasswordLazyRouteImport = createFileRoute(
  '/(auth)/forgot-password',
)()
const authCallbackLazyRouteImport = createFileRoute('/(auth)/callback')()
const AuthenticatedSettingsRouteLazyRouteImport = createFileRoute(
  '/_authenticated/settings',
)()
const AuthenticatedSettingsIndexLazyRouteImport = createFileRoute(
  '/_authenticated/settings/',
)()
const AuthenticatedProxiesIndexLazyRouteImport = createFileRoute(
  '/_authenticated/proxies/',
)()
const AuthenticatedProfilesIndexLazyRouteImport = createFileRoute(
  '/_authenticated/profiles/',
)()
const AuthenticatedHelpCenterIndexLazyRouteImport = createFileRoute(
  '/_authenticated/help-center/',
)()
const AuthenticatedCampaignsIndexLazyRouteImport = createFileRoute(
  '/_authenticated/campaigns/',
)()
const AuthenticatedAdminIndexLazyRouteImport = createFileRoute(
  '/_authenticated/admin/',
)()
const AuthenticatedSettingsNotificationsLazyRouteImport = createFileRoute(
  '/_authenticated/settings/notifications',
)()
const AuthenticatedSettingsDisplayLazyRouteImport = createFileRoute(
  '/_authenticated/settings/display',
)()
const AuthenticatedSettingsBillingLazyRouteImport = createFileRoute(
  '/_authenticated/settings/billing',
)()
const AuthenticatedSettingsAppearanceLazyRouteImport = createFileRoute(
  '/_authenticated/settings/appearance',
)()
const AuthenticatedSettingsAccountLazyRouteImport = createFileRoute(
  '/_authenticated/settings/account',
)()

const AuthenticatedRouteRoute = AuthenticatedRouteRouteImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedIndexRoute = AuthenticatedIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)
const paymentSuccessLazyRoute = paymentSuccessLazyRouteImport
  .update({
    id: '/(payment)/success',
    path: '/success',
    getParentRoute: () => rootRouteImport,
  } as any)
  .lazy(() => import('./routes/(payment)/success.lazy').then((d) => d.Route))
const paymentCancelLazyRoute = paymentCancelLazyRouteImport
  .update({
    id: '/(payment)/cancel',
    path: '/cancel',
    getParentRoute: () => rootRouteImport,
  } as any)
  .lazy(() => import('./routes/(payment)/cancel.lazy').then((d) => d.Route))
const errors598LazyRoute = errors598LazyRouteImport
  .update({
    id: '/(errors)/598',
    path: '/598',
    getParentRoute: () => rootRouteImport,
  } as any)
  .lazy(() => import('./routes/(errors)/598.lazy').then((d) => d.Route))
const errors503LazyRoute = errors503LazyRouteImport
  .update({
    id: '/(errors)/503',
    path: '/503',
    getParentRoute: () => rootRouteImport,
  } as any)
  .lazy(() => import('./routes/(errors)/503.lazy').then((d) => d.Route))
const errors500ErrorLazyRoute = errors500ErrorLazyRouteImport
  .update({
    id: '/(errors)/500-error',
    path: '/500-error',
    getParentRoute: () => rootRouteImport,
  } as any)
  .lazy(() => import('./routes/(errors)/500-error.lazy').then((d) => d.Route))
const errors404LazyRoute = errors404LazyRouteImport
  .update({
    id: '/(errors)/404',
    path: '/404',
    getParentRoute: () => rootRouteImport,
  } as any)
  .lazy(() => import('./routes/(errors)/404.lazy').then((d) => d.Route))
const errors403LazyRoute = errors403LazyRouteImport
  .update({
    id: '/(errors)/403',
    path: '/403',
    getParentRoute: () => rootRouteImport,
  } as any)
  .lazy(() => import('./routes/(errors)/403.lazy').then((d) => d.Route))
const errors401LazyRoute = errors401LazyRouteImport
  .update({
    id: '/(errors)/401',
    path: '/401',
    getParentRoute: () => rootRouteImport,
  } as any)
  .lazy(() => import('./routes/(errors)/401.lazy').then((d) => d.Route))
const authSignUpLazyRoute = authSignUpLazyRouteImport
  .update({
    id: '/(auth)/sign-up',
    path: '/sign-up',
    getParentRoute: () => rootRouteImport,
  } as any)
  .lazy(() => import('./routes/(auth)/sign-up.lazy').then((d) => d.Route))
const authSignIn2LazyRoute = authSignIn2LazyRouteImport
  .update({
    id: '/(auth)/sign-in-2',
    path: '/sign-in-2',
    getParentRoute: () => rootRouteImport,
  } as any)
  .lazy(() => import('./routes/(auth)/sign-in-2.lazy').then((d) => d.Route))
const authLogoutSuccessLazyRoute = authLogoutSuccessLazyRouteImport
  .update({
    id: '/(auth)/logout-success',
    path: '/logout-success',
    getParentRoute: () => rootRouteImport,
  } as any)
  .lazy(() =>
    import('./routes/(auth)/logout-success.lazy').then((d) => d.Route),
  )
const authForgotPasswordLazyRoute = authForgotPasswordLazyRouteImport
  .update({
    id: '/(auth)/forgot-password',
    path: '/forgot-password',
    getParentRoute: () => rootRouteImport,
  } as any)
  .lazy(() =>
    import('./routes/(auth)/forgot-password.lazy').then((d) => d.Route),
  )
const authCallbackLazyRoute = authCallbackLazyRouteImport
  .update({
    id: '/(auth)/callback',
    path: '/callback',
    getParentRoute: () => rootRouteImport,
  } as any)
  .lazy(() => import('./routes/(auth)/callback.lazy').then((d) => d.Route))
const AuthenticatedSettingsRouteLazyRoute =
  AuthenticatedSettingsRouteLazyRouteImport.update({
    id: '/settings',
    path: '/settings',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/settings/route.lazy').then((d) => d.Route),
  )
const authSignInRoute = authSignInRouteImport.update({
  id: '/(auth)/sign-in',
  path: '/sign-in',
  getParentRoute: () => rootRouteImport,
} as any)
const authOtpRoute = authOtpRouteImport.update({
  id: '/(auth)/otp',
  path: '/otp',
  getParentRoute: () => rootRouteImport,
} as any)
const auth500Route = auth500RouteImport.update({
  id: '/(auth)/500',
  path: '/500',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedSettingsIndexLazyRoute =
  AuthenticatedSettingsIndexLazyRouteImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => AuthenticatedSettingsRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/settings/index.lazy').then((d) => d.Route),
  )
const AuthenticatedProxiesIndexLazyRoute =
  AuthenticatedProxiesIndexLazyRouteImport.update({
    id: '/proxies/',
    path: '/proxies/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/proxies/index.lazy').then((d) => d.Route),
  )
const AuthenticatedProfilesIndexLazyRoute =
  AuthenticatedProfilesIndexLazyRouteImport.update({
    id: '/profiles/',
    path: '/profiles/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/profiles/index.lazy').then((d) => d.Route),
  )
const AuthenticatedHelpCenterIndexLazyRoute =
  AuthenticatedHelpCenterIndexLazyRouteImport.update({
    id: '/help-center/',
    path: '/help-center/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/help-center/index.lazy').then(
      (d) => d.Route,
    ),
  )
const AuthenticatedCampaignsIndexLazyRoute =
  AuthenticatedCampaignsIndexLazyRouteImport.update({
    id: '/campaigns/',
    path: '/campaigns/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/campaigns/index.lazy').then((d) => d.Route),
  )
const AuthenticatedAdminIndexLazyRoute =
  AuthenticatedAdminIndexLazyRouteImport.update({
    id: '/admin/',
    path: '/admin/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/admin/index.lazy').then((d) => d.Route),
  )
const AuthenticatedSettingsNotificationsLazyRoute =
  AuthenticatedSettingsNotificationsLazyRouteImport.update({
    id: '/notifications',
    path: '/notifications',
    getParentRoute: () => AuthenticatedSettingsRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/settings/notifications.lazy').then(
      (d) => d.Route,
    ),
  )
const AuthenticatedSettingsDisplayLazyRoute =
  AuthenticatedSettingsDisplayLazyRouteImport.update({
    id: '/display',
    path: '/display',
    getParentRoute: () => AuthenticatedSettingsRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/settings/display.lazy').then(
      (d) => d.Route,
    ),
  )
const AuthenticatedSettingsBillingLazyRoute =
  AuthenticatedSettingsBillingLazyRouteImport.update({
    id: '/billing',
    path: '/billing',
    getParentRoute: () => AuthenticatedSettingsRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/settings/billing.lazy').then(
      (d) => d.Route,
    ),
  )
const AuthenticatedSettingsAppearanceLazyRoute =
  AuthenticatedSettingsAppearanceLazyRouteImport.update({
    id: '/appearance',
    path: '/appearance',
    getParentRoute: () => AuthenticatedSettingsRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/settings/appearance.lazy').then(
      (d) => d.Route,
    ),
  )
const AuthenticatedSettingsAccountLazyRoute =
  AuthenticatedSettingsAccountLazyRouteImport.update({
    id: '/account',
    path: '/account',
    getParentRoute: () => AuthenticatedSettingsRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/settings/account.lazy').then(
      (d) => d.Route,
    ),
  )

export interface FileRoutesByFullPath {
  '/500': typeof auth500Route
  '/otp': typeof authOtpRoute
  '/sign-in': typeof authSignInRoute
  '/settings': typeof AuthenticatedSettingsRouteLazyRouteWithChildren
  '/callback': typeof authCallbackLazyRoute
  '/forgot-password': typeof authForgotPasswordLazyRoute
  '/logout-success': typeof authLogoutSuccessLazyRoute
  '/sign-in-2': typeof authSignIn2LazyRoute
  '/sign-up': typeof authSignUpLazyRoute
  '/401': typeof errors401LazyRoute
  '/403': typeof errors403LazyRoute
  '/404': typeof errors404LazyRoute
  '/500-error': typeof errors500ErrorLazyRoute
  '/503': typeof errors503LazyRoute
  '/598': typeof errors598LazyRoute
  '/cancel': typeof paymentCancelLazyRoute
  '/success': typeof paymentSuccessLazyRoute
  '/': typeof AuthenticatedIndexRoute
  '/settings/account': typeof AuthenticatedSettingsAccountLazyRoute
  '/settings/appearance': typeof AuthenticatedSettingsAppearanceLazyRoute
  '/settings/billing': typeof AuthenticatedSettingsBillingLazyRoute
  '/settings/display': typeof AuthenticatedSettingsDisplayLazyRoute
  '/settings/notifications': typeof AuthenticatedSettingsNotificationsLazyRoute
  '/admin': typeof AuthenticatedAdminIndexLazyRoute
  '/campaigns': typeof AuthenticatedCampaignsIndexLazyRoute
  '/help-center': typeof AuthenticatedHelpCenterIndexLazyRoute
  '/profiles': typeof AuthenticatedProfilesIndexLazyRoute
  '/proxies': typeof AuthenticatedProxiesIndexLazyRoute
  '/settings/': typeof AuthenticatedSettingsIndexLazyRoute
}
export interface FileRoutesByTo {
  '/500': typeof auth500Route
  '/otp': typeof authOtpRoute
  '/sign-in': typeof authSignInRoute
  '/callback': typeof authCallbackLazyRoute
  '/forgot-password': typeof authForgotPasswordLazyRoute
  '/logout-success': typeof authLogoutSuccessLazyRoute
  '/sign-in-2': typeof authSignIn2LazyRoute
  '/sign-up': typeof authSignUpLazyRoute
  '/401': typeof errors401LazyRoute
  '/403': typeof errors403LazyRoute
  '/404': typeof errors404LazyRoute
  '/500-error': typeof errors500ErrorLazyRoute
  '/503': typeof errors503LazyRoute
  '/598': typeof errors598LazyRoute
  '/cancel': typeof paymentCancelLazyRoute
  '/success': typeof paymentSuccessLazyRoute
  '/': typeof AuthenticatedIndexRoute
  '/settings/account': typeof AuthenticatedSettingsAccountLazyRoute
  '/settings/appearance': typeof AuthenticatedSettingsAppearanceLazyRoute
  '/settings/billing': typeof AuthenticatedSettingsBillingLazyRoute
  '/settings/display': typeof AuthenticatedSettingsDisplayLazyRoute
  '/settings/notifications': typeof AuthenticatedSettingsNotificationsLazyRoute
  '/admin': typeof AuthenticatedAdminIndexLazyRoute
  '/campaigns': typeof AuthenticatedCampaignsIndexLazyRoute
  '/help-center': typeof AuthenticatedHelpCenterIndexLazyRoute
  '/profiles': typeof AuthenticatedProfilesIndexLazyRoute
  '/proxies': typeof AuthenticatedProxiesIndexLazyRoute
  '/settings': typeof AuthenticatedSettingsIndexLazyRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_authenticated': typeof AuthenticatedRouteRouteWithChildren
  '/(auth)/500': typeof auth500Route
  '/(auth)/otp': typeof authOtpRoute
  '/(auth)/sign-in': typeof authSignInRoute
  '/_authenticated/settings': typeof AuthenticatedSettingsRouteLazyRouteWithChildren
  '/(auth)/callback': typeof authCallbackLazyRoute
  '/(auth)/forgot-password': typeof authForgotPasswordLazyRoute
  '/(auth)/logout-success': typeof authLogoutSuccessLazyRoute
  '/(auth)/sign-in-2': typeof authSignIn2LazyRoute
  '/(auth)/sign-up': typeof authSignUpLazyRoute
  '/(errors)/401': typeof errors401LazyRoute
  '/(errors)/403': typeof errors403LazyRoute
  '/(errors)/404': typeof errors404LazyRoute
  '/(errors)/500-error': typeof errors500ErrorLazyRoute
  '/(errors)/503': typeof errors503LazyRoute
  '/(errors)/598': typeof errors598LazyRoute
  '/(payment)/cancel': typeof paymentCancelLazyRoute
  '/(payment)/success': typeof paymentSuccessLazyRoute
  '/_authenticated/': typeof AuthenticatedIndexRoute
  '/_authenticated/settings/account': typeof AuthenticatedSettingsAccountLazyRoute
  '/_authenticated/settings/appearance': typeof AuthenticatedSettingsAppearanceLazyRoute
  '/_authenticated/settings/billing': typeof AuthenticatedSettingsBillingLazyRoute
  '/_authenticated/settings/display': typeof AuthenticatedSettingsDisplayLazyRoute
  '/_authenticated/settings/notifications': typeof AuthenticatedSettingsNotificationsLazyRoute
  '/_authenticated/admin/': typeof AuthenticatedAdminIndexLazyRoute
  '/_authenticated/campaigns/': typeof AuthenticatedCampaignsIndexLazyRoute
  '/_authenticated/help-center/': typeof AuthenticatedHelpCenterIndexLazyRoute
  '/_authenticated/profiles/': typeof AuthenticatedProfilesIndexLazyRoute
  '/_authenticated/proxies/': typeof AuthenticatedProxiesIndexLazyRoute
  '/_authenticated/settings/': typeof AuthenticatedSettingsIndexLazyRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/500'
    | '/otp'
    | '/sign-in'
    | '/settings'
    | '/callback'
    | '/forgot-password'
    | '/logout-success'
    | '/sign-in-2'
    | '/sign-up'
    | '/401'
    | '/403'
    | '/404'
    | '/500-error'
    | '/503'
    | '/598'
    | '/cancel'
    | '/success'
    | '/'
    | '/settings/account'
    | '/settings/appearance'
    | '/settings/billing'
    | '/settings/display'
    | '/settings/notifications'
    | '/admin'
    | '/campaigns'
    | '/help-center'
    | '/profiles'
    | '/proxies'
    | '/settings/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/500'
    | '/otp'
    | '/sign-in'
    | '/callback'
    | '/forgot-password'
    | '/logout-success'
    | '/sign-in-2'
    | '/sign-up'
    | '/401'
    | '/403'
    | '/404'
    | '/500-error'
    | '/503'
    | '/598'
    | '/cancel'
    | '/success'
    | '/'
    | '/settings/account'
    | '/settings/appearance'
    | '/settings/billing'
    | '/settings/display'
    | '/settings/notifications'
    | '/admin'
    | '/campaigns'
    | '/help-center'
    | '/profiles'
    | '/proxies'
    | '/settings'
  id:
    | '__root__'
    | '/_authenticated'
    | '/(auth)/500'
    | '/(auth)/otp'
    | '/(auth)/sign-in'
    | '/_authenticated/settings'
    | '/(auth)/callback'
    | '/(auth)/forgot-password'
    | '/(auth)/logout-success'
    | '/(auth)/sign-in-2'
    | '/(auth)/sign-up'
    | '/(errors)/401'
    | '/(errors)/403'
    | '/(errors)/404'
    | '/(errors)/500-error'
    | '/(errors)/503'
    | '/(errors)/598'
    | '/(payment)/cancel'
    | '/(payment)/success'
    | '/_authenticated/'
    | '/_authenticated/settings/account'
    | '/_authenticated/settings/appearance'
    | '/_authenticated/settings/billing'
    | '/_authenticated/settings/display'
    | '/_authenticated/settings/notifications'
    | '/_authenticated/admin/'
    | '/_authenticated/campaigns/'
    | '/_authenticated/help-center/'
    | '/_authenticated/profiles/'
    | '/_authenticated/proxies/'
    | '/_authenticated/settings/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  AuthenticatedRouteRoute: typeof AuthenticatedRouteRouteWithChildren
  auth500Route: typeof auth500Route
  authOtpRoute: typeof authOtpRoute
  authSignInRoute: typeof authSignInRoute
  authCallbackLazyRoute: typeof authCallbackLazyRoute
  authForgotPasswordLazyRoute: typeof authForgotPasswordLazyRoute
  authLogoutSuccessLazyRoute: typeof authLogoutSuccessLazyRoute
  authSignIn2LazyRoute: typeof authSignIn2LazyRoute
  authSignUpLazyRoute: typeof authSignUpLazyRoute
  errors401LazyRoute: typeof errors401LazyRoute
  errors403LazyRoute: typeof errors403LazyRoute
  errors404LazyRoute: typeof errors404LazyRoute
  errors500ErrorLazyRoute: typeof errors500ErrorLazyRoute
  errors503LazyRoute: typeof errors503LazyRoute
  errors598LazyRoute: typeof errors598LazyRoute
  paymentCancelLazyRoute: typeof paymentCancelLazyRoute
  paymentSuccessLazyRoute: typeof paymentSuccessLazyRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated/': {
      id: '/_authenticated/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AuthenticatedIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/(payment)/success': {
      id: '/(payment)/success'
      path: '/success'
      fullPath: '/success'
      preLoaderRoute: typeof paymentSuccessLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(payment)/cancel': {
      id: '/(payment)/cancel'
      path: '/cancel'
      fullPath: '/cancel'
      preLoaderRoute: typeof paymentCancelLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(errors)/598': {
      id: '/(errors)/598'
      path: '/598'
      fullPath: '/598'
      preLoaderRoute: typeof errors598LazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(errors)/503': {
      id: '/(errors)/503'
      path: '/503'
      fullPath: '/503'
      preLoaderRoute: typeof errors503LazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(errors)/500-error': {
      id: '/(errors)/500-error'
      path: '/500-error'
      fullPath: '/500-error'
      preLoaderRoute: typeof errors500ErrorLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(errors)/404': {
      id: '/(errors)/404'
      path: '/404'
      fullPath: '/404'
      preLoaderRoute: typeof errors404LazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(errors)/403': {
      id: '/(errors)/403'
      path: '/403'
      fullPath: '/403'
      preLoaderRoute: typeof errors403LazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(errors)/401': {
      id: '/(errors)/401'
      path: '/401'
      fullPath: '/401'
      preLoaderRoute: typeof errors401LazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(auth)/sign-up': {
      id: '/(auth)/sign-up'
      path: '/sign-up'
      fullPath: '/sign-up'
      preLoaderRoute: typeof authSignUpLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(auth)/sign-in-2': {
      id: '/(auth)/sign-in-2'
      path: '/sign-in-2'
      fullPath: '/sign-in-2'
      preLoaderRoute: typeof authSignIn2LazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(auth)/logout-success': {
      id: '/(auth)/logout-success'
      path: '/logout-success'
      fullPath: '/logout-success'
      preLoaderRoute: typeof authLogoutSuccessLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(auth)/forgot-password': {
      id: '/(auth)/forgot-password'
      path: '/forgot-password'
      fullPath: '/forgot-password'
      preLoaderRoute: typeof authForgotPasswordLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(auth)/callback': {
      id: '/(auth)/callback'
      path: '/callback'
      fullPath: '/callback'
      preLoaderRoute: typeof authCallbackLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated/settings': {
      id: '/_authenticated/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof AuthenticatedSettingsRouteLazyRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/(auth)/sign-in': {
      id: '/(auth)/sign-in'
      path: '/sign-in'
      fullPath: '/sign-in'
      preLoaderRoute: typeof authSignInRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(auth)/otp': {
      id: '/(auth)/otp'
      path: '/otp'
      fullPath: '/otp'
      preLoaderRoute: typeof authOtpRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(auth)/500': {
      id: '/(auth)/500'
      path: '/500'
      fullPath: '/500'
      preLoaderRoute: typeof auth500RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated/settings/': {
      id: '/_authenticated/settings/'
      path: '/'
      fullPath: '/settings/'
      preLoaderRoute: typeof AuthenticatedSettingsIndexLazyRouteImport
      parentRoute: typeof AuthenticatedSettingsRouteLazyRoute
    }
    '/_authenticated/proxies/': {
      id: '/_authenticated/proxies/'
      path: '/proxies'
      fullPath: '/proxies'
      preLoaderRoute: typeof AuthenticatedProxiesIndexLazyRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/profiles/': {
      id: '/_authenticated/profiles/'
      path: '/profiles'
      fullPath: '/profiles'
      preLoaderRoute: typeof AuthenticatedProfilesIndexLazyRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/help-center/': {
      id: '/_authenticated/help-center/'
      path: '/help-center'
      fullPath: '/help-center'
      preLoaderRoute: typeof AuthenticatedHelpCenterIndexLazyRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/campaigns/': {
      id: '/_authenticated/campaigns/'
      path: '/campaigns'
      fullPath: '/campaigns'
      preLoaderRoute: typeof AuthenticatedCampaignsIndexLazyRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/admin/': {
      id: '/_authenticated/admin/'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AuthenticatedAdminIndexLazyRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/settings/notifications': {
      id: '/_authenticated/settings/notifications'
      path: '/notifications'
      fullPath: '/settings/notifications'
      preLoaderRoute: typeof AuthenticatedSettingsNotificationsLazyRouteImport
      parentRoute: typeof AuthenticatedSettingsRouteLazyRoute
    }
    '/_authenticated/settings/display': {
      id: '/_authenticated/settings/display'
      path: '/display'
      fullPath: '/settings/display'
      preLoaderRoute: typeof AuthenticatedSettingsDisplayLazyRouteImport
      parentRoute: typeof AuthenticatedSettingsRouteLazyRoute
    }
    '/_authenticated/settings/billing': {
      id: '/_authenticated/settings/billing'
      path: '/billing'
      fullPath: '/settings/billing'
      preLoaderRoute: typeof AuthenticatedSettingsBillingLazyRouteImport
      parentRoute: typeof AuthenticatedSettingsRouteLazyRoute
    }
    '/_authenticated/settings/appearance': {
      id: '/_authenticated/settings/appearance'
      path: '/appearance'
      fullPath: '/settings/appearance'
      preLoaderRoute: typeof AuthenticatedSettingsAppearanceLazyRouteImport
      parentRoute: typeof AuthenticatedSettingsRouteLazyRoute
    }
    '/_authenticated/settings/account': {
      id: '/_authenticated/settings/account'
      path: '/account'
      fullPath: '/settings/account'
      preLoaderRoute: typeof AuthenticatedSettingsAccountLazyRouteImport
      parentRoute: typeof AuthenticatedSettingsRouteLazyRoute
    }
  }
}

interface AuthenticatedSettingsRouteLazyRouteChildren {
  AuthenticatedSettingsAccountLazyRoute: typeof AuthenticatedSettingsAccountLazyRoute
  AuthenticatedSettingsAppearanceLazyRoute: typeof AuthenticatedSettingsAppearanceLazyRoute
  AuthenticatedSettingsBillingLazyRoute: typeof AuthenticatedSettingsBillingLazyRoute
  AuthenticatedSettingsDisplayLazyRoute: typeof AuthenticatedSettingsDisplayLazyRoute
  AuthenticatedSettingsNotificationsLazyRoute: typeof AuthenticatedSettingsNotificationsLazyRoute
  AuthenticatedSettingsIndexLazyRoute: typeof AuthenticatedSettingsIndexLazyRoute
}

const AuthenticatedSettingsRouteLazyRouteChildren: AuthenticatedSettingsRouteLazyRouteChildren =
  {
    AuthenticatedSettingsAccountLazyRoute:
      AuthenticatedSettingsAccountLazyRoute,
    AuthenticatedSettingsAppearanceLazyRoute:
      AuthenticatedSettingsAppearanceLazyRoute,
    AuthenticatedSettingsBillingLazyRoute:
      AuthenticatedSettingsBillingLazyRoute,
    AuthenticatedSettingsDisplayLazyRoute:
      AuthenticatedSettingsDisplayLazyRoute,
    AuthenticatedSettingsNotificationsLazyRoute:
      AuthenticatedSettingsNotificationsLazyRoute,
    AuthenticatedSettingsIndexLazyRoute: AuthenticatedSettingsIndexLazyRoute,
  }

const AuthenticatedSettingsRouteLazyRouteWithChildren =
  AuthenticatedSettingsRouteLazyRoute._addFileChildren(
    AuthenticatedSettingsRouteLazyRouteChildren,
  )

interface AuthenticatedRouteRouteChildren {
  AuthenticatedSettingsRouteLazyRoute: typeof AuthenticatedSettingsRouteLazyRouteWithChildren
  AuthenticatedIndexRoute: typeof AuthenticatedIndexRoute
  AuthenticatedAdminIndexLazyRoute: typeof AuthenticatedAdminIndexLazyRoute
  AuthenticatedCampaignsIndexLazyRoute: typeof AuthenticatedCampaignsIndexLazyRoute
  AuthenticatedHelpCenterIndexLazyRoute: typeof AuthenticatedHelpCenterIndexLazyRoute
  AuthenticatedProfilesIndexLazyRoute: typeof AuthenticatedProfilesIndexLazyRoute
  AuthenticatedProxiesIndexLazyRoute: typeof AuthenticatedProxiesIndexLazyRoute
}

const AuthenticatedRouteRouteChildren: AuthenticatedRouteRouteChildren = {
  AuthenticatedSettingsRouteLazyRoute:
    AuthenticatedSettingsRouteLazyRouteWithChildren,
  AuthenticatedIndexRoute: AuthenticatedIndexRoute,
  AuthenticatedAdminIndexLazyRoute: AuthenticatedAdminIndexLazyRoute,
  AuthenticatedCampaignsIndexLazyRoute: AuthenticatedCampaignsIndexLazyRoute,
  AuthenticatedHelpCenterIndexLazyRoute: AuthenticatedHelpCenterIndexLazyRoute,
  AuthenticatedProfilesIndexLazyRoute: AuthenticatedProfilesIndexLazyRoute,
  AuthenticatedProxiesIndexLazyRoute: AuthenticatedProxiesIndexLazyRoute,
}

const AuthenticatedRouteRouteWithChildren =
  AuthenticatedRouteRoute._addFileChildren(AuthenticatedRouteRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  AuthenticatedRouteRoute: AuthenticatedRouteRouteWithChildren,
  auth500Route: auth500Route,
  authOtpRoute: authOtpRoute,
  authSignInRoute: authSignInRoute,
  authCallbackLazyRoute: authCallbackLazyRoute,
  authForgotPasswordLazyRoute: authForgotPasswordLazyRoute,
  authLogoutSuccessLazyRoute: authLogoutSuccessLazyRoute,
  authSignIn2LazyRoute: authSignIn2LazyRoute,
  authSignUpLazyRoute: authSignUpLazyRoute,
  errors401LazyRoute: errors401LazyRoute,
  errors403LazyRoute: errors403LazyRoute,
  errors404LazyRoute: errors404LazyRoute,
  errors500ErrorLazyRoute: errors500ErrorLazyRoute,
  errors503LazyRoute: errors503LazyRoute,
  errors598LazyRoute: errors598LazyRoute,
  paymentCancelLazyRoute: paymentCancelLazyRoute,
  paymentSuccessLazyRoute: paymentSuccessLazyRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
